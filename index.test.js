const { Ship, GameBoard } = require("./index.js");

// Testing ship.getHit and ship.isSunk
test("Does ship.getHits change hits 1", () => {
  let carrier = new Ship(5);
  carrier.getHit();
  expect(carrier.hits).toBe(1);
});

test("Does ship.getHits change hits 2", () => {
  let carrier = new Ship(5);
  carrier.getHit();
  carrier.getHit();
  expect(carrier.hits).toBe(2);
});

test("Does ship.getHits change hits 3", () => {
  let carrier = new Ship(5);
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  expect(carrier.hits).toBe(3);
});

test("Does ship.getHits change hits 4", () => {
  let carrier = new Ship(5);
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  expect(carrier.hits).toBe(4);
});

test("Does ship.isSunk detect when ship is not sunk", () => {
  let carrier = new Ship(5);
  carrier.isSunk;
  expect(carrier.sunk).toBe(false);
});

test("Does ship.isSunk detect when ship is sunk", () => {
  let carrier = new Ship(5);
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  carrier.getHit();
  carrier.isSunk();
  expect(carrier.sunk).toBe(true);
});

// Testing GameBoard.placeShip
test("Place one ship on board", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("carrier", 5, "x", 22);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    "carrier",
    "carrier",
    "carrier",
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});

test("Place one ship on board (Y Direction)", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("carrier", 5, "y", 22);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});

test("Place one ship on board (Destroyer)", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("destroyer", 3, "x", 35);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "destroyer",
    "destroyer",
    "destroyer",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});

test("Place two ships on board (both x direction)", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("carrier", 5, "x", 22);
  gameBoard.placeShip("destroyer", 3, "x", 35);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    "carrier",
    "carrier",
    "carrier",
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "destroyer",
    "destroyer",
    "destroyer",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});

test("Place two ships on board (mixed directions)", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("carrier", 5, "y", 22);
  gameBoard.placeShip("destroyer", 3, "x", 35);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    "destroyer",
    "destroyer",
    "destroyer",
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});

test("Place 5 ships on board (mixed directions)", () => {
  let gameBoard = new GameBoard();
  gameBoard.placeShip("carrier", 5, "y", 22);
  gameBoard.placeShip("battleship", 4, "x", 83);
  gameBoard.placeShip("destroyer", 3, "x", 35);
  gameBoard.placeShip("submarine", 3, "x", 5);
  gameBoard.placeShip("patrolBoat", 2, "y", 58);
  expect(gameBoard.gameBoard).toEqual([
    null,
    null,
    null,
    null,
    null,
    "submarine",
    "submarine",
    "submarine",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    "destroyer",
    "destroyer",
    "destroyer",
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    "patrolBoat",
    null,
    null,
    null,
    "carrier",
    null,
    null,
    null,
    null,
    null,
    "patrolBoat",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    "battleship",
    "battleship",
    "battleship",
    "battleship",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  ]);
});
